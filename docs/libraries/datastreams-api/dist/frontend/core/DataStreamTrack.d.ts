import { DataTrackSettings } from "./DataTrackSettings";
import { DataTrackCapabilities } from "./DataTrackCapabilities";
import { DataTrackConstraints } from "./DataTrackConstraints";
import { Device } from "../devices/Device";
export declare class DataStreamTrack extends EventTarget {
    contentHint: string;
    enabled: boolean;
    isolated: boolean;
    muted: boolean;
    remote: boolean;
    id: string;
    kind: string;
    label: string;
    readyState: MediaStreamTrackState;
    data: any[];
    callbacks: Map<string, Function>;
    pipeline: any[];
    _bufferSize: number;
    get [Symbol.toStringTag](): string;
    constructor(device?: Device<any>);
    deinit: () => void;
    applyConstraints: () => Promise<void>;
    clone: () => this;
    getCapabilities: () => DataTrackCapabilities;
    getConstraints: () => DataTrackConstraints;
    getSettings: () => DataTrackSettings;
    stop: () => void;
    addData: (val: any) => void;
    ondata: (data: any) => void;
    subscribe: (callback: Function) => string;
    unsubscribe: (id: string) => void;
    onended: () => void;
    onisolationchange: () => void;
    onmute: () => void;
    onunmute: () => void;
}
